namespace SoulEngine.Input;

/// <summary>
/// Provides an action for every key
/// </summary>
public sealed class KeyActions 
{
    public readonly InputAction Space;
    public readonly InputAction Apostrophe;
    public readonly InputAction Comma;
    public readonly InputAction Minus;
    public readonly InputAction Period;
    public readonly InputAction Slash;
    public readonly InputAction D0;
    public readonly InputAction D1;
    public readonly InputAction D2;
    public readonly InputAction D3;
    public readonly InputAction D4;
    public readonly InputAction D5;
    public readonly InputAction D6;
    public readonly InputAction D7;
    public readonly InputAction D8;
    public readonly InputAction D9;
    public readonly InputAction Semicolon;
    public readonly InputAction Equal;
    public readonly InputAction A;
    public readonly InputAction B;
    public readonly InputAction C;
    public readonly InputAction D;
    public readonly InputAction E;
    public readonly InputAction F;
    public readonly InputAction G;
    public readonly InputAction H;
    public readonly InputAction I;
    public readonly InputAction J;
    public readonly InputAction K;
    public readonly InputAction L;
    public readonly InputAction M;
    public readonly InputAction N;
    public readonly InputAction O;
    public readonly InputAction P;
    public readonly InputAction Q;
    public readonly InputAction R;
    public readonly InputAction S;
    public readonly InputAction T;
    public readonly InputAction U;
    public readonly InputAction V;
    public readonly InputAction W;
    public readonly InputAction X;
    public readonly InputAction Y;
    public readonly InputAction Z;
    public readonly InputAction LeftBracket;
    public readonly InputAction Backslash;
    public readonly InputAction RightBracket;
    public readonly InputAction GraveAccent;
    public readonly InputAction Escape;
    public readonly InputAction Enter;
    public readonly InputAction Tab;
    public readonly InputAction Backspace;
    public readonly InputAction Insert;
    public readonly InputAction Delete;
    public readonly InputAction Right;
    public readonly InputAction Left;
    public readonly InputAction Down;
    public readonly InputAction Up;
    public readonly InputAction PageUp;
    public readonly InputAction PageDown;
    public readonly InputAction Home;
    public readonly InputAction End;
    public readonly InputAction CapsLock;
    public readonly InputAction ScrollLock;
    public readonly InputAction NumLock;
    public readonly InputAction PrintScreen;
    public readonly InputAction Pause;
    public readonly InputAction F1;
    public readonly InputAction F2;
    public readonly InputAction F3;
    public readonly InputAction F4;
    public readonly InputAction F5;
    public readonly InputAction F6;
    public readonly InputAction F7;
    public readonly InputAction F8;
    public readonly InputAction F9;
    public readonly InputAction F10;
    public readonly InputAction F11;
    public readonly InputAction F12;
    public readonly InputAction F13;
    public readonly InputAction F14;
    public readonly InputAction F15;
    public readonly InputAction F16;
    public readonly InputAction F17;
    public readonly InputAction F18;
    public readonly InputAction F19;
    public readonly InputAction F20;
    public readonly InputAction F21;
    public readonly InputAction F22;
    public readonly InputAction F23;
    public readonly InputAction F24;
    public readonly InputAction F25;
    public readonly InputAction KeyPad0;
    public readonly InputAction KeyPad1;
    public readonly InputAction KeyPad2;
    public readonly InputAction KeyPad3;
    public readonly InputAction KeyPad4;
    public readonly InputAction KeyPad5;
    public readonly InputAction KeyPad6;
    public readonly InputAction KeyPad7;
    public readonly InputAction KeyPad8;
    public readonly InputAction KeyPad9;
    public readonly InputAction KeyPadDecimal;
    public readonly InputAction KeyPadDivide;
    public readonly InputAction KeyPadMultiply;
    public readonly InputAction KeyPadSubtract;
    public readonly InputAction KeyPadAdd;
    public readonly InputAction KeyPadEnter;
    public readonly InputAction KeyPadEqual;
    public readonly InputAction LeftShift;
    public readonly InputAction LeftControl;
    public readonly InputAction LeftAlt;
    public readonly InputAction LeftSuper;
    public readonly InputAction RightShift;
    public readonly InputAction RightControl;
    public readonly InputAction RightAlt;
    public readonly InputAction RightSuper;
    public readonly InputAction Menu;


    public KeyActions(InputManager inputManager)
    {
        Space = inputManager.Action().Name("builtin.keys.space").Bind(KeyCode.Space).Finish().IgnoreWindow();
        Apostrophe = inputManager.Action().Name("builtin.keys.apostrophe").Bind(KeyCode.Apostrophe).Finish().IgnoreWindow();
        Comma = inputManager.Action().Name("builtin.keys.comma").Bind(KeyCode.Comma).Finish().IgnoreWindow();
        Minus = inputManager.Action().Name("builtin.keys.minus").Bind(KeyCode.Minus).Finish().IgnoreWindow();
        Period = inputManager.Action().Name("builtin.keys.period").Bind(KeyCode.Period).Finish().IgnoreWindow();
        Slash = inputManager.Action().Name("builtin.keys.slash").Bind(KeyCode.Slash).Finish().IgnoreWindow();
        D0 = inputManager.Action().Name("builtin.keys.d0").Bind(KeyCode.D0).Finish().IgnoreWindow();
        D1 = inputManager.Action().Name("builtin.keys.d1").Bind(KeyCode.D1).Finish().IgnoreWindow();
        D2 = inputManager.Action().Name("builtin.keys.d2").Bind(KeyCode.D2).Finish().IgnoreWindow();
        D3 = inputManager.Action().Name("builtin.keys.d3").Bind(KeyCode.D3).Finish().IgnoreWindow();
        D4 = inputManager.Action().Name("builtin.keys.d4").Bind(KeyCode.D4).Finish().IgnoreWindow();
        D5 = inputManager.Action().Name("builtin.keys.d5").Bind(KeyCode.D5).Finish().IgnoreWindow();
        D6 = inputManager.Action().Name("builtin.keys.d6").Bind(KeyCode.D6).Finish().IgnoreWindow();
        D7 = inputManager.Action().Name("builtin.keys.d7").Bind(KeyCode.D7).Finish().IgnoreWindow();
        D8 = inputManager.Action().Name("builtin.keys.d8").Bind(KeyCode.D8).Finish().IgnoreWindow();
        D9 = inputManager.Action().Name("builtin.keys.d9").Bind(KeyCode.D9).Finish().IgnoreWindow();
        Semicolon = inputManager.Action().Name("builtin.keys.semicolon").Bind(KeyCode.Semicolon).Finish().IgnoreWindow();
        Equal = inputManager.Action().Name("builtin.keys.equal").Bind(KeyCode.Equal).Finish().IgnoreWindow();
        A = inputManager.Action().Name("builtin.keys.a").Bind(KeyCode.A).Finish().IgnoreWindow();
        B = inputManager.Action().Name("builtin.keys.b").Bind(KeyCode.B).Finish().IgnoreWindow();
        C = inputManager.Action().Name("builtin.keys.c").Bind(KeyCode.C).Finish().IgnoreWindow();
        D = inputManager.Action().Name("builtin.keys.d").Bind(KeyCode.D).Finish().IgnoreWindow();
        E = inputManager.Action().Name("builtin.keys.e").Bind(KeyCode.E).Finish().IgnoreWindow();
        F = inputManager.Action().Name("builtin.keys.f").Bind(KeyCode.F).Finish().IgnoreWindow();
        G = inputManager.Action().Name("builtin.keys.g").Bind(KeyCode.G).Finish().IgnoreWindow();
        H = inputManager.Action().Name("builtin.keys.h").Bind(KeyCode.H).Finish().IgnoreWindow();
        I = inputManager.Action().Name("builtin.keys.i").Bind(KeyCode.I).Finish().IgnoreWindow();
        J = inputManager.Action().Name("builtin.keys.j").Bind(KeyCode.J).Finish().IgnoreWindow();
        K = inputManager.Action().Name("builtin.keys.k").Bind(KeyCode.K).Finish().IgnoreWindow();
        L = inputManager.Action().Name("builtin.keys.l").Bind(KeyCode.L).Finish().IgnoreWindow();
        M = inputManager.Action().Name("builtin.keys.m").Bind(KeyCode.M).Finish().IgnoreWindow();
        N = inputManager.Action().Name("builtin.keys.n").Bind(KeyCode.N).Finish().IgnoreWindow();
        O = inputManager.Action().Name("builtin.keys.o").Bind(KeyCode.O).Finish().IgnoreWindow();
        P = inputManager.Action().Name("builtin.keys.p").Bind(KeyCode.P).Finish().IgnoreWindow();
        Q = inputManager.Action().Name("builtin.keys.q").Bind(KeyCode.Q).Finish().IgnoreWindow();
        R = inputManager.Action().Name("builtin.keys.r").Bind(KeyCode.R).Finish().IgnoreWindow();
        S = inputManager.Action().Name("builtin.keys.s").Bind(KeyCode.S).Finish().IgnoreWindow();
        T = inputManager.Action().Name("builtin.keys.t").Bind(KeyCode.T).Finish().IgnoreWindow();
        U = inputManager.Action().Name("builtin.keys.u").Bind(KeyCode.U).Finish().IgnoreWindow();
        V = inputManager.Action().Name("builtin.keys.v").Bind(KeyCode.V).Finish().IgnoreWindow();
        W = inputManager.Action().Name("builtin.keys.w").Bind(KeyCode.W).Finish().IgnoreWindow();
        X = inputManager.Action().Name("builtin.keys.x").Bind(KeyCode.X).Finish().IgnoreWindow();
        Y = inputManager.Action().Name("builtin.keys.y").Bind(KeyCode.Y).Finish().IgnoreWindow();
        Z = inputManager.Action().Name("builtin.keys.z").Bind(KeyCode.Z).Finish().IgnoreWindow();
        LeftBracket = inputManager.Action().Name("builtin.keys.left_bracket").Bind(KeyCode.LeftBracket).Finish().IgnoreWindow();
        Backslash = inputManager.Action().Name("builtin.keys.backslash").Bind(KeyCode.Backslash).Finish().IgnoreWindow();
        RightBracket = inputManager.Action().Name("builtin.keys.right_bracket").Bind(KeyCode.RightBracket).Finish().IgnoreWindow();
        GraveAccent = inputManager.Action().Name("builtin.keys.grave_accent").Bind(KeyCode.GraveAccent).Finish().IgnoreWindow();
        Escape = inputManager.Action().Name("builtin.keys.escape").Bind(KeyCode.Escape).Finish().IgnoreWindow();
        Enter = inputManager.Action().Name("builtin.keys.enter").Bind(KeyCode.Enter).Finish().IgnoreWindow();
        Tab = inputManager.Action().Name("builtin.keys.tab").Bind(KeyCode.Tab).Finish().IgnoreWindow();
        Backspace = inputManager.Action().Name("builtin.keys.backspace").Bind(KeyCode.Backspace).Finish().IgnoreWindow();
        Insert = inputManager.Action().Name("builtin.keys.insert").Bind(KeyCode.Insert).Finish().IgnoreWindow();
        Delete = inputManager.Action().Name("builtin.keys.delete").Bind(KeyCode.Delete).Finish().IgnoreWindow();
        Right = inputManager.Action().Name("builtin.keys.right").Bind(KeyCode.Right).Finish().IgnoreWindow();
        Left = inputManager.Action().Name("builtin.keys.left").Bind(KeyCode.Left).Finish().IgnoreWindow();
        Down = inputManager.Action().Name("builtin.keys.down").Bind(KeyCode.Down).Finish().IgnoreWindow();
        Up = inputManager.Action().Name("builtin.keys.up").Bind(KeyCode.Up).Finish().IgnoreWindow();
        PageUp = inputManager.Action().Name("builtin.keys.page_up").Bind(KeyCode.PageUp).Finish().IgnoreWindow();
        PageDown = inputManager.Action().Name("builtin.keys.page_down").Bind(KeyCode.PageDown).Finish().IgnoreWindow();
        Home = inputManager.Action().Name("builtin.keys.home").Bind(KeyCode.Home).Finish().IgnoreWindow();
        End = inputManager.Action().Name("builtin.keys.end").Bind(KeyCode.End).Finish().IgnoreWindow();
        CapsLock = inputManager.Action().Name("builtin.keys.caps_lock").Bind(KeyCode.CapsLock).Finish().IgnoreWindow();
        ScrollLock = inputManager.Action().Name("builtin.keys.scroll_lock").Bind(KeyCode.ScrollLock).Finish().IgnoreWindow();
        NumLock = inputManager.Action().Name("builtin.keys.num_lock").Bind(KeyCode.NumLock).Finish().IgnoreWindow();
        PrintScreen = inputManager.Action().Name("builtin.keys.print_screen").Bind(KeyCode.PrintScreen).Finish().IgnoreWindow();
        Pause = inputManager.Action().Name("builtin.keys.pause").Bind(KeyCode.Pause).Finish().IgnoreWindow();
        F1 = inputManager.Action().Name("builtin.keys.f1").Bind(KeyCode.F1).Finish().IgnoreWindow();
        F2 = inputManager.Action().Name("builtin.keys.f2").Bind(KeyCode.F2).Finish().IgnoreWindow();
        F3 = inputManager.Action().Name("builtin.keys.f3").Bind(KeyCode.F3).Finish().IgnoreWindow();
        F4 = inputManager.Action().Name("builtin.keys.f4").Bind(KeyCode.F4).Finish().IgnoreWindow();
        F5 = inputManager.Action().Name("builtin.keys.f5").Bind(KeyCode.F5).Finish().IgnoreWindow();
        F6 = inputManager.Action().Name("builtin.keys.f6").Bind(KeyCode.F6).Finish().IgnoreWindow();
        F7 = inputManager.Action().Name("builtin.keys.f7").Bind(KeyCode.F7).Finish().IgnoreWindow();
        F8 = inputManager.Action().Name("builtin.keys.f8").Bind(KeyCode.F8).Finish().IgnoreWindow();
        F9 = inputManager.Action().Name("builtin.keys.f9").Bind(KeyCode.F9).Finish().IgnoreWindow();
        F10 = inputManager.Action().Name("builtin.keys.f10").Bind(KeyCode.F10).Finish().IgnoreWindow();
        F11 = inputManager.Action().Name("builtin.keys.f11").Bind(KeyCode.F11).Finish().IgnoreWindow();
        F12 = inputManager.Action().Name("builtin.keys.f12").Bind(KeyCode.F12).Finish().IgnoreWindow();
        F13 = inputManager.Action().Name("builtin.keys.f13").Bind(KeyCode.F13).Finish().IgnoreWindow();
        F14 = inputManager.Action().Name("builtin.keys.f14").Bind(KeyCode.F14).Finish().IgnoreWindow();
        F15 = inputManager.Action().Name("builtin.keys.f15").Bind(KeyCode.F15).Finish().IgnoreWindow();
        F16 = inputManager.Action().Name("builtin.keys.f16").Bind(KeyCode.F16).Finish().IgnoreWindow();
        F17 = inputManager.Action().Name("builtin.keys.f17").Bind(KeyCode.F17).Finish().IgnoreWindow();
        F18 = inputManager.Action().Name("builtin.keys.f18").Bind(KeyCode.F18).Finish().IgnoreWindow();
        F19 = inputManager.Action().Name("builtin.keys.f19").Bind(KeyCode.F19).Finish().IgnoreWindow();
        F20 = inputManager.Action().Name("builtin.keys.f20").Bind(KeyCode.F20).Finish().IgnoreWindow();
        F21 = inputManager.Action().Name("builtin.keys.f21").Bind(KeyCode.F21).Finish().IgnoreWindow();
        F22 = inputManager.Action().Name("builtin.keys.f22").Bind(KeyCode.F22).Finish().IgnoreWindow();
        F23 = inputManager.Action().Name("builtin.keys.f23").Bind(KeyCode.F23).Finish().IgnoreWindow();
        F24 = inputManager.Action().Name("builtin.keys.f24").Bind(KeyCode.F24).Finish().IgnoreWindow();
        F25 = inputManager.Action().Name("builtin.keys.f25").Bind(KeyCode.F25).Finish().IgnoreWindow();
        KeyPad0 = inputManager.Action().Name("builtin.keys.key_pad0").Bind(KeyCode.KeyPad0).Finish().IgnoreWindow();
        KeyPad1 = inputManager.Action().Name("builtin.keys.key_pad1").Bind(KeyCode.KeyPad1).Finish().IgnoreWindow();
        KeyPad2 = inputManager.Action().Name("builtin.keys.key_pad2").Bind(KeyCode.KeyPad2).Finish().IgnoreWindow();
        KeyPad3 = inputManager.Action().Name("builtin.keys.key_pad3").Bind(KeyCode.KeyPad3).Finish().IgnoreWindow();
        KeyPad4 = inputManager.Action().Name("builtin.keys.key_pad4").Bind(KeyCode.KeyPad4).Finish().IgnoreWindow();
        KeyPad5 = inputManager.Action().Name("builtin.keys.key_pad5").Bind(KeyCode.KeyPad5).Finish().IgnoreWindow();
        KeyPad6 = inputManager.Action().Name("builtin.keys.key_pad6").Bind(KeyCode.KeyPad6).Finish().IgnoreWindow();
        KeyPad7 = inputManager.Action().Name("builtin.keys.key_pad7").Bind(KeyCode.KeyPad7).Finish().IgnoreWindow();
        KeyPad8 = inputManager.Action().Name("builtin.keys.key_pad8").Bind(KeyCode.KeyPad8).Finish().IgnoreWindow();
        KeyPad9 = inputManager.Action().Name("builtin.keys.key_pad9").Bind(KeyCode.KeyPad9).Finish().IgnoreWindow();
        KeyPadDecimal = inputManager.Action().Name("builtin.keys.key_pad_decimal").Bind(KeyCode.KeyPadDecimal).Finish().IgnoreWindow();
        KeyPadDivide = inputManager.Action().Name("builtin.keys.key_pad_divide").Bind(KeyCode.KeyPadDivide).Finish().IgnoreWindow();
        KeyPadMultiply = inputManager.Action().Name("builtin.keys.key_pad_multiply").Bind(KeyCode.KeyPadMultiply).Finish().IgnoreWindow();
        KeyPadSubtract = inputManager.Action().Name("builtin.keys.key_pad_subtract").Bind(KeyCode.KeyPadSubtract).Finish().IgnoreWindow();
        KeyPadAdd = inputManager.Action().Name("builtin.keys.key_pad_add").Bind(KeyCode.KeyPadAdd).Finish().IgnoreWindow();
        KeyPadEnter = inputManager.Action().Name("builtin.keys.key_pad_enter").Bind(KeyCode.KeyPadEnter).Finish().IgnoreWindow();
        KeyPadEqual = inputManager.Action().Name("builtin.keys.key_pad_equal").Bind(KeyCode.KeyPadEqual).Finish().IgnoreWindow();
        LeftShift = inputManager.Action().Name("builtin.keys.left_shift").Bind(KeyCode.LeftShift).Finish().IgnoreWindow();
        LeftControl = inputManager.Action().Name("builtin.keys.left_control").Bind(KeyCode.LeftControl).Finish().IgnoreWindow();
        LeftAlt = inputManager.Action().Name("builtin.keys.left_alt").Bind(KeyCode.LeftAlt).Finish().IgnoreWindow();
        LeftSuper = inputManager.Action().Name("builtin.keys.left_super").Bind(KeyCode.LeftSuper).Finish().IgnoreWindow();
        RightShift = inputManager.Action().Name("builtin.keys.right_shift").Bind(KeyCode.RightShift).Finish().IgnoreWindow();
        RightControl = inputManager.Action().Name("builtin.keys.right_control").Bind(KeyCode.RightControl).Finish().IgnoreWindow();
        RightAlt = inputManager.Action().Name("builtin.keys.right_alt").Bind(KeyCode.RightAlt).Finish().IgnoreWindow();
        RightSuper = inputManager.Action().Name("builtin.keys.right_super").Bind(KeyCode.RightSuper).Finish().IgnoreWindow();
        Menu = inputManager.Action().Name("builtin.keys.menu").Bind(KeyCode.Menu).Finish().IgnoreWindow();
    }
}
